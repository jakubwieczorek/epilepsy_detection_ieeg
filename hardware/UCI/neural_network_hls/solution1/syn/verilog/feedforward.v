// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feedforward_feedforward,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.805820,HLS_SYN_LAT=16410,HLS_SYN_TPT=none,HLS_SYN_MEM=37,HLS_SYN_DSP=0,HLS_SYN_FF=3768,HLS_SYN_LUT=5394,HLS_VERSION=2020_2}" *)

module feedforward (
        ap_clk,
        ap_rst_n,
        x_Addr_A,
        x_EN_A,
        x_WEN_A,
        x_Din_A,
        x_Dout_A,
        x_Clk_A,
        x_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 148'd1;
parameter    ap_ST_fsm_state2 = 148'd2;
parameter    ap_ST_fsm_state3 = 148'd4;
parameter    ap_ST_fsm_state4 = 148'd8;
parameter    ap_ST_fsm_state5 = 148'd16;
parameter    ap_ST_fsm_state6 = 148'd32;
parameter    ap_ST_fsm_state7 = 148'd64;
parameter    ap_ST_fsm_state8 = 148'd128;
parameter    ap_ST_fsm_state9 = 148'd256;
parameter    ap_ST_fsm_state10 = 148'd512;
parameter    ap_ST_fsm_state11 = 148'd1024;
parameter    ap_ST_fsm_state12 = 148'd2048;
parameter    ap_ST_fsm_state13 = 148'd4096;
parameter    ap_ST_fsm_state14 = 148'd8192;
parameter    ap_ST_fsm_state15 = 148'd16384;
parameter    ap_ST_fsm_state16 = 148'd32768;
parameter    ap_ST_fsm_state17 = 148'd65536;
parameter    ap_ST_fsm_state18 = 148'd131072;
parameter    ap_ST_fsm_state19 = 148'd262144;
parameter    ap_ST_fsm_state20 = 148'd524288;
parameter    ap_ST_fsm_state21 = 148'd1048576;
parameter    ap_ST_fsm_state22 = 148'd2097152;
parameter    ap_ST_fsm_state23 = 148'd4194304;
parameter    ap_ST_fsm_state24 = 148'd8388608;
parameter    ap_ST_fsm_state25 = 148'd16777216;
parameter    ap_ST_fsm_state26 = 148'd33554432;
parameter    ap_ST_fsm_state27 = 148'd67108864;
parameter    ap_ST_fsm_state28 = 148'd134217728;
parameter    ap_ST_fsm_state29 = 148'd268435456;
parameter    ap_ST_fsm_state30 = 148'd536870912;
parameter    ap_ST_fsm_state31 = 148'd1073741824;
parameter    ap_ST_fsm_state32 = 148'd2147483648;
parameter    ap_ST_fsm_state33 = 148'd4294967296;
parameter    ap_ST_fsm_state34 = 148'd8589934592;
parameter    ap_ST_fsm_state35 = 148'd17179869184;
parameter    ap_ST_fsm_state36 = 148'd34359738368;
parameter    ap_ST_fsm_state37 = 148'd68719476736;
parameter    ap_ST_fsm_state38 = 148'd137438953472;
parameter    ap_ST_fsm_state39 = 148'd274877906944;
parameter    ap_ST_fsm_state40 = 148'd549755813888;
parameter    ap_ST_fsm_state41 = 148'd1099511627776;
parameter    ap_ST_fsm_state42 = 148'd2199023255552;
parameter    ap_ST_fsm_state43 = 148'd4398046511104;
parameter    ap_ST_fsm_state44 = 148'd8796093022208;
parameter    ap_ST_fsm_state45 = 148'd17592186044416;
parameter    ap_ST_fsm_state46 = 148'd35184372088832;
parameter    ap_ST_fsm_state47 = 148'd70368744177664;
parameter    ap_ST_fsm_state48 = 148'd140737488355328;
parameter    ap_ST_fsm_state49 = 148'd281474976710656;
parameter    ap_ST_fsm_state50 = 148'd562949953421312;
parameter    ap_ST_fsm_state51 = 148'd1125899906842624;
parameter    ap_ST_fsm_state52 = 148'd2251799813685248;
parameter    ap_ST_fsm_state53 = 148'd4503599627370496;
parameter    ap_ST_fsm_state54 = 148'd9007199254740992;
parameter    ap_ST_fsm_state55 = 148'd18014398509481984;
parameter    ap_ST_fsm_state56 = 148'd36028797018963968;
parameter    ap_ST_fsm_state57 = 148'd72057594037927936;
parameter    ap_ST_fsm_state58 = 148'd144115188075855872;
parameter    ap_ST_fsm_state59 = 148'd288230376151711744;
parameter    ap_ST_fsm_state60 = 148'd576460752303423488;
parameter    ap_ST_fsm_state61 = 148'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 148'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 148'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 148'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 148'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 148'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 148'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 148'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 148'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 148'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 148'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 148'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 148'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 148'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 148'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 148'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 148'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 148'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 148'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 148'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 148'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 148'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 148'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 148'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 148'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 148'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 148'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 148'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 148'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 148'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 148'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 148'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 148'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 148'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 148'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 148'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 148'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 148'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 148'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 148'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 148'd1267650600228229401496703205376;
parameter    ap_ST_fsm_pp4_stage0 = 148'd2535301200456458802993406410752;
parameter    ap_ST_fsm_pp4_stage1 = 148'd5070602400912917605986812821504;
parameter    ap_ST_fsm_pp4_stage2 = 148'd10141204801825835211973625643008;
parameter    ap_ST_fsm_pp4_stage3 = 148'd20282409603651670423947251286016;
parameter    ap_ST_fsm_pp4_stage4 = 148'd40564819207303340847894502572032;
parameter    ap_ST_fsm_pp4_stage5 = 148'd81129638414606681695789005144064;
parameter    ap_ST_fsm_pp4_stage6 = 148'd162259276829213363391578010288128;
parameter    ap_ST_fsm_pp4_stage7 = 148'd324518553658426726783156020576256;
parameter    ap_ST_fsm_pp4_stage8 = 148'd649037107316853453566312041152512;
parameter    ap_ST_fsm_pp4_stage9 = 148'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state113 = 148'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state114 = 148'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state115 = 148'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state116 = 148'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state117 = 148'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state118 = 148'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state119 = 148'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state120 = 148'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state121 = 148'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state122 = 148'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state123 = 148'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state124 = 148'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state125 = 148'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state126 = 148'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state127 = 148'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state128 = 148'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state129 = 148'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state130 = 148'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state131 = 148'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state132 = 148'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state133 = 148'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state134 = 148'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state135 = 148'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state136 = 148'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state137 = 148'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state138 = 148'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state139 = 148'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state140 = 148'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state141 = 148'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state142 = 148'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state143 = 148'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state144 = 148'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state145 = 148'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state146 = 148'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state147 = 148'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state148 = 148'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state149 = 148'd178405961588244985132285746181186892047843328;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] x_Addr_A;
output   x_EN_A;
output  [3:0] x_WEN_A;
output  [31:0] x_Din_A;
input  [31:0] x_Dout_A;
output   x_Clk_A;
output   x_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [3:0] y_WEN_A;
output  [31:0] y_Din_A;
input  [31:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

reg x_EN_A;
reg y_EN_A;
reg[3:0] y_WEN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [147:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [13:0] w1_address0;
reg    w1_ce0;
wire   [31:0] w1_q0;
wire   [6:0] b1_address0;
reg    b1_ce0;
wire   [31:0] b1_q0;
wire   [6:0] w2_0_address0;
reg    w2_0_ce0;
wire   [31:0] w2_0_q0;
reg   [6:0] i_1_reg_1619;
reg   [31:0] empty_20_reg_1631;
reg   [31:0] reg_1667;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state75;
wire   [31:0] wy_sum_q1;
reg   [31:0] reg_1672;
wire   [31:0] wy_sum_q0;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state91;
reg   [31:0] reg_1678;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state36;
reg   [31:0] reg_1683;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state76;
reg   [31:0] reg_1688;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state38;
reg   [31:0] reg_1693;
reg   [31:0] reg_1699;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state77;
reg   [31:0] reg_1704;
wire    ap_CS_fsm_state42;
reg   [31:0] reg_1709;
reg   [31:0] reg_1715;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state78;
reg   [31:0] reg_1720;
reg   [31:0] reg_1725;
wire   [31:0] grp_fu_1648_p2;
reg   [31:0] reg_1731;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_pp4_stage5;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state107_pp4_stage5_iter0;
wire    ap_block_pp4_stage5_11001;
reg   [0:0] icmp_ln44_reg_3894;
reg   [31:0] reg_1736;
reg   [31:0] reg_1741;
reg   [31:0] reg_1747;
wire    ap_CS_fsm_state82;
reg   [31:0] reg_1752;
reg   [31:0] reg_1757;
reg   [31:0] reg_1763;
reg   [31:0] reg_1768;
reg   [31:0] reg_1773;
reg   [31:0] reg_1779;
wire    ap_CS_fsm_state79;
reg   [31:0] reg_1784;
reg   [31:0] reg_1789;
reg   [31:0] reg_1795;
wire    ap_CS_fsm_state80;
reg   [31:0] reg_1800;
reg   [31:0] reg_1805;
wire   [31:0] grp_fu_1641_p2;
reg   [31:0] reg_1811;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state102_pp4_stage0_iter0;
wire    ap_block_state112_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state132;
reg   [31:0] reg_1820;
reg   [31:0] reg_1826;
reg   [31:0] reg_1832;
reg   [31:0] reg_1838;
reg   [31:0] reg_1844;
reg   [31:0] reg_1850;
reg   [31:0] reg_1856;
reg   [31:0] reg_1862;
reg   [31:0] reg_1868;
reg   [31:0] reg_1874;
reg   [31:0] reg_1879;
reg   [31:0] reg_1884;
reg   [31:0] reg_1889;
reg   [31:0] reg_1894;
reg   [31:0] reg_1899;
reg   [31:0] reg_1904;
wire   [6:0] empty_12_fu_1909_p2;
wire    ap_CS_fsm_state2;
wire   [6:0] empty_15_fu_1926_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [7:0] add_ln31_fu_1943_p2;
reg   [7:0] add_ln31_reg_3213;
wire    ap_CS_fsm_state6;
wire   [13:0] add_ln34_fu_1980_p2;
reg   [13:0] add_ln34_reg_3221;
wire   [0:0] icmp_ln31_fu_1949_p2;
reg   [31:0] x_load_reg_3311;
wire   [31:0] empty_18_fu_2011_p1;
reg   [31:0] empty_18_reg_3321;
reg   [31:0] wy_sum_load_28_reg_3386;
reg   [31:0] wy_sum_load_30_reg_3396;
reg   [31:0] wy_sum_load_32_reg_3406;
reg   [31:0] wy_sum_load_34_reg_3416;
reg   [31:0] wy_sum_load_36_reg_3426;
reg   [31:0] wy_sum_load_38_reg_3436;
reg   [31:0] wy_sum_load_40_reg_3446;
reg   [31:0] wy_sum_load_42_reg_3456;
reg   [31:0] wy_sum_load_44_reg_3466;
reg   [31:0] add_12_reg_3476;
reg   [31:0] wy_sum_load_46_reg_3481;
reg   [31:0] add_13_reg_3491;
reg   [31:0] wy_sum_load_48_reg_3496;
reg   [31:0] add_14_reg_3506;
reg   [31:0] wy_sum_load_50_reg_3511;
reg   [31:0] add_15_reg_3521;
reg   [31:0] wy_sum_load_52_reg_3526;
reg   [31:0] add_16_reg_3536;
reg   [31:0] wy_sum_load_54_reg_3541;
reg   [31:0] add_17_reg_3551;
reg   [31:0] wy_sum_load_56_reg_3556;
reg   [31:0] add_18_reg_3566;
reg   [31:0] wy_sum_load_58_reg_3571;
reg   [31:0] add_19_reg_3581;
reg   [31:0] wy_sum_load_60_reg_3586;
reg   [31:0] add_20_reg_3596;
reg   [31:0] wy_sum_load_62_reg_3601;
reg   [31:0] add_21_reg_3611;
reg   [31:0] wy_sum_load_64_reg_3616;
reg   [31:0] add_22_reg_3626;
reg   [31:0] wy_sum_load_66_reg_3631;
reg   [31:0] add_23_reg_3641;
reg   [31:0] wy_sum_load_68_reg_3646;
reg   [31:0] add_24_reg_3656;
reg   [31:0] wy_sum_load_70_reg_3661;
reg   [31:0] wy_sum_load_72_reg_3671;
wire   [6:0] add_ln38_fu_2705_p2;
reg   [6:0] add_ln38_reg_3851;
wire    ap_CS_fsm_state90;
wire   [63:0] zext_ln38_fu_2717_p1;
reg   [63:0] zext_ln38_reg_3859;
wire   [0:0] icmp_ln38_fu_2711_p2;
reg   [31:0] b1_load_reg_3874;
wire   [31:0] select_ln9_fu_2765_p3;
reg   [31:0] select_ln9_reg_3879;
wire    ap_CS_fsm_state98;
wire   [0:0] y_addr_reg_3884;
wire    ap_CS_fsm_state100;
wire   [31:0] bitcast_ln46_fu_2773_p1;
wire    ap_CS_fsm_state101;
wire   [0:0] icmp_ln44_fu_2777_p2;
reg   [31:0] w2_0_load_reg_3908;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state103_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
wire   [31:0] l1y_q0;
reg   [31:0] l1y_load_reg_3913;
wire   [6:0] add_ln44_fu_2789_p2;
reg   [6:0] add_ln44_reg_3918;
wire   [31:0] xor_ln13_fu_2799_p2;
reg   [31:0] xor_ln13_reg_3923;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state119;
wire   [31:0] grp_fu_1662_p2;
reg   [31:0] tmp_reg_3933;
wire    ap_CS_fsm_state127;
wire   [31:0] grp_fu_1652_p2;
reg   [31:0] div_i_reg_3938;
wire    ap_CS_fsm_state148;
wire    ap_block_pp4_stage5_subdone;
reg    ap_condition_pp4_exit_iter0_state107;
wire    ap_block_state111_pp4_stage9_iter0;
wire    ap_block_pp4_stage9_subdone;
wire    ap_CS_fsm_pp4_stage9;
reg   [6:0] l1y_address0;
reg    l1y_ce0;
reg    l1y_we0;
reg   [31:0] l1y_d0;
reg   [6:0] wy_sum_address0;
reg    wy_sum_ce0;
reg    wy_sum_we0;
reg   [31:0] wy_sum_d0;
reg   [6:0] wy_sum_address1;
reg    wy_sum_ce1;
reg    wy_sum_we1;
reg   [31:0] wy_sum_d1;
reg   [6:0] empty_reg_1575;
wire   [0:0] exitcond199_fu_1915_p2;
reg   [6:0] empty_14_reg_1586;
wire   [0:0] exitcond188_fu_1932_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] i_reg_1597;
wire    ap_CS_fsm_state88;
reg   [6:0] o_reg_1608;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state89;
reg   [6:0] ap_phi_mux_i_1_phi_fu_1623_p4;
wire    ap_block_pp4_stage0;
wire   [63:0] p_cast_fu_1921_p1;
wire   [63:0] p_cast1_fu_1938_p1;
wire   [63:0] zext_ln34_1_fu_1986_p1;
wire   [63:0] zext_ln31_fu_1955_p1;
wire   [63:0] zext_ln34_2_fu_1996_p1;
wire   [63:0] zext_ln34_3_fu_2006_p1;
wire   [63:0] zext_ln34_4_fu_2020_p1;
wire   [63:0] zext_ln34_5_fu_2030_p1;
wire   [63:0] zext_ln34_6_fu_2040_p1;
wire   [63:0] zext_ln34_7_fu_2050_p1;
wire   [63:0] zext_ln34_8_fu_2060_p1;
wire   [63:0] zext_ln34_9_fu_2070_p1;
wire   [63:0] zext_ln34_10_fu_2080_p1;
wire   [63:0] zext_ln34_11_fu_2090_p1;
wire   [63:0] zext_ln34_12_fu_2100_p1;
wire   [63:0] zext_ln34_13_fu_2110_p1;
wire   [63:0] zext_ln34_14_fu_2120_p1;
wire   [63:0] zext_ln34_15_fu_2130_p1;
wire   [63:0] zext_ln34_16_fu_2140_p1;
wire   [63:0] zext_ln34_17_fu_2150_p1;
wire   [63:0] zext_ln34_18_fu_2160_p1;
wire   [63:0] zext_ln34_19_fu_2170_p1;
wire   [63:0] zext_ln34_20_fu_2180_p1;
wire   [63:0] zext_ln34_21_fu_2190_p1;
wire   [63:0] zext_ln34_22_fu_2200_p1;
wire   [63:0] zext_ln34_23_fu_2210_p1;
wire   [63:0] zext_ln34_24_fu_2220_p1;
wire   [63:0] zext_ln34_25_fu_2230_p1;
wire   [63:0] zext_ln34_26_fu_2240_p1;
wire   [63:0] zext_ln34_27_fu_2250_p1;
wire   [63:0] zext_ln34_28_fu_2260_p1;
wire   [63:0] zext_ln34_29_fu_2270_p1;
wire   [63:0] zext_ln34_30_fu_2280_p1;
wire   [63:0] zext_ln34_31_fu_2290_p1;
wire   [63:0] zext_ln34_32_fu_2300_p1;
wire   [63:0] zext_ln34_33_fu_2310_p1;
wire   [63:0] zext_ln34_34_fu_2320_p1;
wire   [63:0] zext_ln34_35_fu_2330_p1;
wire   [63:0] zext_ln34_36_fu_2340_p1;
wire   [63:0] zext_ln34_37_fu_2350_p1;
wire   [63:0] zext_ln34_38_fu_2360_p1;
wire   [63:0] zext_ln34_39_fu_2370_p1;
wire   [63:0] zext_ln34_40_fu_2380_p1;
wire   [63:0] zext_ln34_41_fu_2390_p1;
wire   [63:0] zext_ln34_42_fu_2400_p1;
wire   [63:0] zext_ln34_43_fu_2410_p1;
wire   [63:0] zext_ln34_44_fu_2420_p1;
wire   [63:0] zext_ln34_45_fu_2430_p1;
wire   [63:0] zext_ln34_46_fu_2440_p1;
wire   [63:0] zext_ln34_47_fu_2450_p1;
wire   [63:0] zext_ln34_48_fu_2460_p1;
wire   [63:0] zext_ln34_49_fu_2470_p1;
wire   [63:0] zext_ln34_50_fu_2480_p1;
wire   [63:0] zext_ln34_51_fu_2490_p1;
wire   [63:0] zext_ln34_52_fu_2500_p1;
wire   [63:0] zext_ln34_53_fu_2510_p1;
wire   [63:0] zext_ln34_54_fu_2520_p1;
wire   [63:0] zext_ln34_55_fu_2530_p1;
wire   [63:0] zext_ln34_56_fu_2540_p1;
wire   [63:0] zext_ln34_57_fu_2550_p1;
wire   [63:0] zext_ln34_58_fu_2560_p1;
wire   [63:0] zext_ln34_59_fu_2570_p1;
wire   [63:0] zext_ln34_60_fu_2580_p1;
wire   [63:0] zext_ln34_61_fu_2590_p1;
wire   [63:0] zext_ln34_62_fu_2600_p1;
wire   [63:0] zext_ln34_63_fu_2610_p1;
wire   [63:0] zext_ln34_64_fu_2620_p1;
wire   [63:0] zext_ln34_65_fu_2630_p1;
wire   [63:0] zext_ln34_66_fu_2640_p1;
wire   [63:0] zext_ln34_67_fu_2650_p1;
wire   [63:0] zext_ln34_68_fu_2660_p1;
wire   [63:0] zext_ln34_69_fu_2670_p1;
wire   [63:0] zext_ln34_70_fu_2680_p1;
wire   [63:0] zext_ln34_71_fu_2690_p1;
wire   [63:0] zext_ln34_72_fu_2700_p1;
wire   [63:0] zext_ln44_fu_2783_p1;
wire   [31:0] x_Addr_A_orig;
reg   [31:0] y_Addr_A_orig;
wire    ap_CS_fsm_state149;
reg   [31:0] grp_fu_1641_p0;
reg   [31:0] grp_fu_1641_p1;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_pp4_stage6;
wire    ap_block_pp4_stage6;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state128;
reg   [31:0] grp_fu_1648_p0;
reg   [31:0] grp_fu_1648_p1;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_pp4_stage2;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state97;
wire   [31:0] grp_fu_1662_p1;
wire   [10:0] tmp_4_fu_1968_p3;
wire   [13:0] tmp_3_fu_1960_p3;
wire   [13:0] zext_ln34_fu_1976_p1;
wire   [13:0] or_ln34_fu_1991_p2;
wire   [13:0] or_ln34_1_fu_2001_p2;
wire   [13:0] or_ln34_2_fu_2015_p2;
wire   [13:0] or_ln34_3_fu_2025_p2;
wire   [13:0] or_ln34_4_fu_2035_p2;
wire   [13:0] or_ln34_5_fu_2045_p2;
wire   [13:0] or_ln34_6_fu_2055_p2;
wire   [13:0] add_ln34_1_fu_2065_p2;
wire   [13:0] add_ln34_2_fu_2075_p2;
wire   [13:0] add_ln34_3_fu_2085_p2;
wire   [13:0] add_ln34_4_fu_2095_p2;
wire   [13:0] add_ln34_5_fu_2105_p2;
wire   [13:0] add_ln34_6_fu_2115_p2;
wire   [13:0] add_ln34_7_fu_2125_p2;
wire   [13:0] add_ln34_8_fu_2135_p2;
wire   [13:0] add_ln34_9_fu_2145_p2;
wire   [13:0] add_ln34_10_fu_2155_p2;
wire   [13:0] add_ln34_11_fu_2165_p2;
wire   [13:0] add_ln34_12_fu_2175_p2;
wire   [13:0] add_ln34_13_fu_2185_p2;
wire   [13:0] add_ln34_14_fu_2195_p2;
wire   [13:0] add_ln34_15_fu_2205_p2;
wire   [13:0] add_ln34_16_fu_2215_p2;
wire   [13:0] add_ln34_17_fu_2225_p2;
wire   [13:0] add_ln34_18_fu_2235_p2;
wire   [13:0] add_ln34_19_fu_2245_p2;
wire   [13:0] add_ln34_20_fu_2255_p2;
wire   [13:0] add_ln34_21_fu_2265_p2;
wire   [13:0] add_ln34_22_fu_2275_p2;
wire   [13:0] add_ln34_23_fu_2285_p2;
wire   [13:0] add_ln34_24_fu_2295_p2;
wire   [13:0] add_ln34_25_fu_2305_p2;
wire   [13:0] add_ln34_26_fu_2315_p2;
wire   [13:0] add_ln34_27_fu_2325_p2;
wire   [13:0] add_ln34_28_fu_2335_p2;
wire   [13:0] add_ln34_29_fu_2345_p2;
wire   [13:0] add_ln34_30_fu_2355_p2;
wire   [13:0] add_ln34_31_fu_2365_p2;
wire   [13:0] add_ln34_32_fu_2375_p2;
wire   [13:0] add_ln34_33_fu_2385_p2;
wire   [13:0] add_ln34_34_fu_2395_p2;
wire   [13:0] add_ln34_35_fu_2405_p2;
wire   [13:0] add_ln34_36_fu_2415_p2;
wire   [13:0] add_ln34_37_fu_2425_p2;
wire   [13:0] add_ln34_38_fu_2435_p2;
wire   [13:0] add_ln34_39_fu_2445_p2;
wire   [13:0] add_ln34_40_fu_2455_p2;
wire   [13:0] add_ln34_41_fu_2465_p2;
wire   [13:0] add_ln34_42_fu_2475_p2;
wire   [13:0] add_ln34_43_fu_2485_p2;
wire   [13:0] add_ln34_44_fu_2495_p2;
wire   [13:0] add_ln34_45_fu_2505_p2;
wire   [13:0] add_ln34_46_fu_2515_p2;
wire   [13:0] add_ln34_47_fu_2525_p2;
wire   [13:0] add_ln34_48_fu_2535_p2;
wire   [13:0] add_ln34_49_fu_2545_p2;
wire   [13:0] add_ln34_50_fu_2555_p2;
wire   [13:0] add_ln34_51_fu_2565_p2;
wire   [13:0] add_ln34_52_fu_2575_p2;
wire   [13:0] add_ln34_53_fu_2585_p2;
wire   [13:0] add_ln34_54_fu_2595_p2;
wire   [13:0] add_ln34_55_fu_2605_p2;
wire   [13:0] add_ln34_56_fu_2615_p2;
wire   [13:0] add_ln34_57_fu_2625_p2;
wire   [13:0] add_ln34_58_fu_2635_p2;
wire   [13:0] add_ln34_59_fu_2645_p2;
wire   [13:0] add_ln34_60_fu_2655_p2;
wire   [13:0] add_ln34_61_fu_2665_p2;
wire   [13:0] add_ln34_62_fu_2675_p2;
wire   [13:0] add_ln34_63_fu_2685_p2;
wire   [13:0] add_ln34_64_fu_2695_p2;
wire   [31:0] bitcast_ln9_fu_2723_p1;
wire   [7:0] tmp_1_fu_2727_p4;
wire   [22:0] trunc_ln9_fu_2737_p1;
wire   [0:0] icmp_ln9_1_fu_2747_p2;
wire   [0:0] icmp_ln9_fu_2741_p2;
wire   [0:0] or_ln9_fu_2753_p2;
wire   [0:0] grp_fu_1657_p2;
wire   [0:0] and_ln9_fu_2759_p2;
wire    ap_block_pp4_stage5;
wire   [31:0] bitcast_ln13_fu_2795_p1;
reg   [147:0] ap_NS_fsm;
wire    ap_block_pp4_stage0_subdone;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_state104_pp4_stage2_iter0;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp4_stage2_11001;
wire    ap_block_state105_pp4_stage3_iter0;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_pp4_stage3_11001;
wire    ap_block_state106_pp4_stage4_iter0;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_pp4_stage4_11001;
wire    ap_block_state108_pp4_stage6_iter0;
wire    ap_block_pp4_stage6_subdone;
wire    ap_block_pp4_stage6_11001;
wire    ap_block_state109_pp4_stage7_iter0;
wire    ap_block_pp4_stage7_subdone;
wire    ap_block_pp4_stage7_11001;
wire    ap_block_state110_pp4_stage8_iter0;
wire    ap_block_pp4_stage8_subdone;
wire    ap_block_pp4_stage8_11001;
wire    ap_block_pp4_stage9_11001;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 148'd1;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
end

feedforward_w1 #(
    .DataWidth( 32 ),
    .AddressRange( 12816 ),
    .AddressWidth( 14 ))
w1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(w1_address0),
    .ce0(w1_ce0),
    .q0(w1_q0)
);

feedforward_b1 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
b1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b1_address0),
    .ce0(b1_ce0),
    .q0(b1_q0)
);

feedforward_w2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
w2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(w2_0_address0),
    .ce0(w2_0_ce0),
    .q0(w2_0_q0)
);

feedforward_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

feedforward_l1y #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
l1y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(l1y_address0),
    .ce0(l1y_ce0),
    .we0(l1y_we0),
    .d0(l1y_d0),
    .q0(l1y_q0)
);

feedforward_wy_sum #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
wy_sum_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wy_sum_address0),
    .ce0(wy_sum_ce0),
    .we0(wy_sum_we0),
    .d0(wy_sum_d0),
    .q0(wy_sum_q0),
    .address1(wy_sum_address1),
    .ce1(wy_sum_ce1),
    .we1(wy_sum_we1),
    .d1(wy_sum_d1),
    .q1(wy_sum_q1)
);

feedforward_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1641_p0),
    .din1(grp_fu_1641_p1),
    .ce(1'b1),
    .dout(grp_fu_1641_p2)
);

feedforward_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1648_p0),
    .din1(grp_fu_1648_p1),
    .ce(1'b1),
    .dout(grp_fu_1648_p2)
);

feedforward_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd1065353216),
    .din1(reg_1811),
    .ce(1'b1),
    .dout(grp_fu_1652_p2)
);

feedforward_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_1811),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1657_p2)
);

feedforward_fexp_32ns_32ns_32_9_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_9_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd0),
    .din1(grp_fu_1662_p1),
    .ce(1'b1),
    .dout(grp_fu_1662_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage5_subdone) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b1 == ap_condition_pp4_exit_iter0_state107))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage9_subdone) & (1'b1 == ap_CS_fsm_pp4_stage9)) | ((1'b0 == ap_block_pp4_stage5_subdone) & (ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage5)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_14_reg_1586 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond188_fu_1932_p2 == 1'd0))) begin
        empty_14_reg_1586 <= empty_15_fu_1926_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        empty_20_reg_1631 <= bitcast_ln46_fu_2773_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        empty_20_reg_1631 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond199_fu_1915_p2 == 1'd0))) begin
        empty_reg_1575 <= empty_12_fu_1909_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_1575 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        i_1_reg_1619 <= 7'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_1_reg_1619 <= add_ln44_reg_3918;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_1597 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        i_reg_1597 <= add_ln31_reg_3213;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        o_reg_1608 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        o_reg_1608 <= add_ln38_reg_3851;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_1672 <= wy_sum_q0;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1672 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_1693 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_1693 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_1709 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_1709 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        reg_1725 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_1725 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_1741 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_1741 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_1757 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_1757 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        reg_1773 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_1773 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        reg_1789 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_1789 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        reg_1805 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_1805 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_1820 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_1820 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1832 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_1832 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        reg_1844 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_1844 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        reg_1856 <= wy_sum_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_1856 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_12_reg_3476 <= grp_fu_1641_p2;
        wy_sum_load_46_reg_3481 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_13_reg_3491 <= grp_fu_1641_p2;
        wy_sum_load_48_reg_3496 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_14_reg_3506 <= grp_fu_1641_p2;
        wy_sum_load_50_reg_3511 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_15_reg_3521 <= grp_fu_1641_p2;
        wy_sum_load_52_reg_3526 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_16_reg_3536 <= grp_fu_1641_p2;
        wy_sum_load_54_reg_3541 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_17_reg_3551 <= grp_fu_1641_p2;
        wy_sum_load_56_reg_3556 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_18_reg_3566 <= grp_fu_1641_p2;
        wy_sum_load_58_reg_3571 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_19_reg_3581 <= grp_fu_1641_p2;
        wy_sum_load_60_reg_3586 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_20_reg_3596 <= grp_fu_1641_p2;
        wy_sum_load_62_reg_3601 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_21_reg_3611 <= grp_fu_1641_p2;
        wy_sum_load_64_reg_3616 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_22_reg_3626 <= grp_fu_1641_p2;
        wy_sum_load_66_reg_3631 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        add_23_reg_3641 <= grp_fu_1641_p2;
        wy_sum_load_68_reg_3646 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        add_24_reg_3656 <= grp_fu_1641_p2;
        wy_sum_load_70_reg_3661 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln31_reg_3213 <= add_ln31_fu_1943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln31_fu_1949_p2 == 1'd0))) begin
        add_ln34_reg_3221[13 : 3] <= add_ln34_fu_1980_p2[13 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        add_ln38_reg_3851 <= add_ln38_fu_2705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        add_ln44_reg_3918 <= add_ln44_fu_2789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        b1_load_reg_3874 <= b1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        div_i_reg_3938 <= grp_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        empty_18_reg_3321 <= empty_18_fu_2011_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln44_reg_3894 <= icmp_ln44_fu_2777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        l1y_load_reg_3913 <= l1y_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1667 <= w1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1678 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_1683 <= w1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_1688 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1699 <= w1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_1704 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_1715 <= w1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1720 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state11) | ((icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)))) begin
        reg_1731 <= grp_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_1736 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_1747 <= grp_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_1752 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_1763 <= grp_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_1768 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_1779 <= grp_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_1784 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_1795 <= grp_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_1800 <= wy_sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state55) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        reg_1811 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_1826 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_1838 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_1850 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state59))) begin
        reg_1862 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state47))) begin
        reg_1868 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state48))) begin
        reg_1874 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_1879 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_1884 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_1889 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state52))) begin
        reg_1894 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_1899 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_1904 <= grp_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        select_ln9_reg_3879 <= select_ln9_fu_2765_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        tmp_reg_3933 <= grp_fu_1662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        w2_0_load_reg_3908 <= w2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        wy_sum_load_28_reg_3386 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        wy_sum_load_30_reg_3396 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        wy_sum_load_32_reg_3406 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        wy_sum_load_34_reg_3416 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        wy_sum_load_36_reg_3426 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        wy_sum_load_38_reg_3436 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        wy_sum_load_40_reg_3446 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        wy_sum_load_42_reg_3456 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        wy_sum_load_44_reg_3466 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        wy_sum_load_72_reg_3671 <= wy_sum_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x_load_reg_3311 <= x_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        xor_ln13_reg_3923 <= xor_ln13_fu_2799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln38_fu_2711_p2 == 1'd0))) begin
        zext_ln38_reg_3859[6 : 0] <= zext_ln38_fu_2717_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln44_reg_3894 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state107 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state107 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln44_reg_3894 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i_1_phi_fu_1623_p4 = add_ln44_reg_3918;
    end else begin
        ap_phi_mux_i_1_phi_fu_1623_p4 = i_1_reg_1619;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        b1_ce0 = 1'b1;
    end else begin
        b1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_1641_p0 = tmp_reg_3933;
    end else if (((1'b1 == ap_CS_fsm_state113) | ((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)))) begin
        grp_fu_1641_p0 = empty_20_reg_1631;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1641_p0 = wy_sum_load_72_reg_3671;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_1641_p0 = wy_sum_load_70_reg_3661;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1641_p0 = wy_sum_load_68_reg_3646;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1641_p0 = wy_sum_load_66_reg_3631;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1641_p0 = wy_sum_load_64_reg_3616;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_1641_p0 = wy_sum_load_62_reg_3601;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_1641_p0 = wy_sum_load_60_reg_3586;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1641_p0 = wy_sum_load_58_reg_3571;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1641_p0 = wy_sum_load_56_reg_3556;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1641_p0 = wy_sum_load_54_reg_3541;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_1641_p0 = wy_sum_load_52_reg_3526;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_1641_p0 = wy_sum_load_50_reg_3511;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_1641_p0 = wy_sum_load_48_reg_3496;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_1641_p0 = wy_sum_load_46_reg_3481;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1641_p0 = wy_sum_load_44_reg_3466;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_1641_p0 = wy_sum_load_42_reg_3456;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1641_p0 = wy_sum_load_40_reg_3446;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1641_p0 = wy_sum_load_38_reg_3436;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1641_p0 = wy_sum_load_36_reg_3426;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1641_p0 = wy_sum_load_34_reg_3416;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1641_p0 = wy_sum_load_32_reg_3406;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1641_p0 = wy_sum_load_30_reg_3396;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1641_p0 = wy_sum_load_28_reg_3386;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_1641_p0 = reg_1856;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1641_p0 = reg_1844;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_1641_p0 = reg_1832;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1641_p0 = reg_1820;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_1641_p0 = reg_1805;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1641_p0 = reg_1800;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_1641_p0 = reg_1789;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1641_p0 = reg_1784;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_fu_1641_p0 = reg_1773;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1641_p0 = reg_1768;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_1641_p0 = reg_1757;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_1641_p0 = reg_1752;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_fu_1641_p0 = reg_1741;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1641_p0 = reg_1736;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_1641_p0 = reg_1725;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_1641_p0 = reg_1720;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_1641_p0 = reg_1709;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1641_p0 = reg_1704;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_1641_p0 = reg_1693;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_1641_p0 = reg_1688;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_1641_p0 = reg_1678;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state92))) begin
        grp_fu_1641_p0 = reg_1672;
    end else begin
        grp_fu_1641_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_1641_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_1641_p1 = 32'd3205032086;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_1641_p1 = b1_load_reg_3874;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1641_p1 = reg_1795;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_1641_p1 = reg_1779;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_1641_p1 = reg_1763;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_1641_p1 = reg_1747;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state27) | ((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)))) begin
        grp_fu_1641_p1 = reg_1731;
    end else begin
        grp_fu_1641_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_1648_p0 = w2_0_load_reg_3908;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1648_p0 = reg_1715;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_1648_p0 = reg_1699;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_1648_p0 = reg_1683;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1648_p0 = reg_1667;
    end else begin
        grp_fu_1648_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_1648_p1 = l1y_load_reg_3913;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1648_p1 = empty_18_reg_3321;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1648_p1 = empty_18_fu_2011_p1;
    end else begin
        grp_fu_1648_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        l1y_address0 = zext_ln44_fu_2783_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        l1y_address0 = zext_ln38_reg_3859;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l1y_address0 = p_cast_fu_1921_p1;
    end else begin
        l1y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state99) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        l1y_ce0 = 1'b1;
    end else begin
        l1y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        l1y_d0 = select_ln9_reg_3879;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l1y_d0 = 32'd0;
    end else begin
        l1y_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | ((1'b1 == ap_CS_fsm_state2) & (exitcond199_fu_1915_p2 == 1'd0)))) begin
        l1y_we0 = 1'b1;
    end else begin
        l1y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        w1_address0 = zext_ln34_72_fu_2700_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        w1_address0 = zext_ln34_71_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        w1_address0 = zext_ln34_70_fu_2680_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        w1_address0 = zext_ln34_69_fu_2670_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        w1_address0 = zext_ln34_68_fu_2660_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        w1_address0 = zext_ln34_67_fu_2650_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        w1_address0 = zext_ln34_66_fu_2640_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        w1_address0 = zext_ln34_65_fu_2630_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        w1_address0 = zext_ln34_64_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        w1_address0 = zext_ln34_63_fu_2610_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        w1_address0 = zext_ln34_62_fu_2600_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        w1_address0 = zext_ln34_61_fu_2590_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        w1_address0 = zext_ln34_60_fu_2580_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        w1_address0 = zext_ln34_59_fu_2570_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        w1_address0 = zext_ln34_58_fu_2560_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        w1_address0 = zext_ln34_57_fu_2550_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        w1_address0 = zext_ln34_56_fu_2540_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        w1_address0 = zext_ln34_55_fu_2530_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        w1_address0 = zext_ln34_54_fu_2520_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        w1_address0 = zext_ln34_53_fu_2510_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        w1_address0 = zext_ln34_52_fu_2500_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_address0 = zext_ln34_51_fu_2490_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        w1_address0 = zext_ln34_50_fu_2480_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        w1_address0 = zext_ln34_49_fu_2470_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        w1_address0 = zext_ln34_48_fu_2460_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        w1_address0 = zext_ln34_47_fu_2450_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        w1_address0 = zext_ln34_46_fu_2440_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        w1_address0 = zext_ln34_45_fu_2430_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        w1_address0 = zext_ln34_44_fu_2420_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        w1_address0 = zext_ln34_43_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        w1_address0 = zext_ln34_42_fu_2400_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        w1_address0 = zext_ln34_41_fu_2390_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        w1_address0 = zext_ln34_40_fu_2380_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        w1_address0 = zext_ln34_39_fu_2370_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        w1_address0 = zext_ln34_38_fu_2360_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        w1_address0 = zext_ln34_37_fu_2350_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        w1_address0 = zext_ln34_36_fu_2340_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        w1_address0 = zext_ln34_35_fu_2330_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        w1_address0 = zext_ln34_34_fu_2320_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        w1_address0 = zext_ln34_33_fu_2310_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w1_address0 = zext_ln34_32_fu_2300_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        w1_address0 = zext_ln34_31_fu_2290_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        w1_address0 = zext_ln34_30_fu_2280_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        w1_address0 = zext_ln34_29_fu_2270_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w1_address0 = zext_ln34_28_fu_2260_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        w1_address0 = zext_ln34_27_fu_2250_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        w1_address0 = zext_ln34_26_fu_2240_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        w1_address0 = zext_ln34_25_fu_2230_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        w1_address0 = zext_ln34_24_fu_2220_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        w1_address0 = zext_ln34_23_fu_2210_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        w1_address0 = zext_ln34_22_fu_2200_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        w1_address0 = zext_ln34_21_fu_2190_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        w1_address0 = zext_ln34_20_fu_2180_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        w1_address0 = zext_ln34_19_fu_2170_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        w1_address0 = zext_ln34_18_fu_2160_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        w1_address0 = zext_ln34_17_fu_2150_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        w1_address0 = zext_ln34_16_fu_2140_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        w1_address0 = zext_ln34_15_fu_2130_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        w1_address0 = zext_ln34_14_fu_2120_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        w1_address0 = zext_ln34_13_fu_2110_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        w1_address0 = zext_ln34_12_fu_2100_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        w1_address0 = zext_ln34_11_fu_2090_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w1_address0 = zext_ln34_10_fu_2080_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        w1_address0 = zext_ln34_9_fu_2070_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        w1_address0 = zext_ln34_8_fu_2060_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        w1_address0 = zext_ln34_7_fu_2050_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        w1_address0 = zext_ln34_6_fu_2040_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        w1_address0 = zext_ln34_5_fu_2030_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        w1_address0 = zext_ln34_4_fu_2020_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        w1_address0 = zext_ln34_3_fu_2006_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        w1_address0 = zext_ln34_2_fu_1996_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        w1_address0 = zext_ln34_1_fu_1986_p1;
    end else begin
        w1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        w1_ce0 = 1'b1;
    end else begin
        w1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        w2_0_ce0 = 1'b1;
    end else begin
        w2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        wy_sum_address0 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        wy_sum_address0 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        wy_sum_address0 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        wy_sum_address0 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        wy_sum_address0 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        wy_sum_address0 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        wy_sum_address0 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        wy_sum_address0 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        wy_sum_address0 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        wy_sum_address0 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        wy_sum_address0 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        wy_sum_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        wy_sum_address0 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wy_sum_address0 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        wy_sum_address0 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        wy_sum_address0 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        wy_sum_address0 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        wy_sum_address0 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        wy_sum_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        wy_sum_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        wy_sum_address0 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        wy_sum_address0 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        wy_sum_address0 = 64'd50;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state30))) begin
        wy_sum_address0 = 64'd48;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state29))) begin
        wy_sum_address0 = 64'd46;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state28))) begin
        wy_sum_address0 = 64'd44;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state27))) begin
        wy_sum_address0 = 64'd42;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state26))) begin
        wy_sum_address0 = 64'd40;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state25))) begin
        wy_sum_address0 = 64'd38;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state24))) begin
        wy_sum_address0 = 64'd36;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state23))) begin
        wy_sum_address0 = 64'd34;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state22))) begin
        wy_sum_address0 = 64'd32;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state21))) begin
        wy_sum_address0 = 64'd30;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state20))) begin
        wy_sum_address0 = 64'd28;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state19))) begin
        wy_sum_address0 = 64'd26;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state18))) begin
        wy_sum_address0 = 64'd24;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state17))) begin
        wy_sum_address0 = 64'd22;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state16))) begin
        wy_sum_address0 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state15))) begin
        wy_sum_address0 = 64'd18;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state14))) begin
        wy_sum_address0 = 64'd16;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13))) begin
        wy_sum_address0 = 64'd14;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state12))) begin
        wy_sum_address0 = 64'd12;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state11))) begin
        wy_sum_address0 = 64'd10;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state10))) begin
        wy_sum_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state9))) begin
        wy_sum_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state8))) begin
        wy_sum_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state7))) begin
        wy_sum_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        wy_sum_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        wy_sum_address0 = p_cast1_fu_1938_p1;
    end else begin
        wy_sum_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        wy_sum_address1 = zext_ln38_fu_2717_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        wy_sum_address1 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        wy_sum_address1 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        wy_sum_address1 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        wy_sum_address1 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        wy_sum_address1 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        wy_sum_address1 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        wy_sum_address1 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        wy_sum_address1 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        wy_sum_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        wy_sum_address1 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        wy_sum_address1 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        wy_sum_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        wy_sum_address1 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        wy_sum_address1 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        wy_sum_address1 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        wy_sum_address1 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        wy_sum_address1 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        wy_sum_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        wy_sum_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        wy_sum_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        wy_sum_address1 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        wy_sum_address1 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        wy_sum_address1 = 64'd51;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state30))) begin
        wy_sum_address1 = 64'd49;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state29))) begin
        wy_sum_address1 = 64'd47;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state28))) begin
        wy_sum_address1 = 64'd45;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state27))) begin
        wy_sum_address1 = 64'd43;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state26))) begin
        wy_sum_address1 = 64'd41;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state25))) begin
        wy_sum_address1 = 64'd39;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state24))) begin
        wy_sum_address1 = 64'd37;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state23))) begin
        wy_sum_address1 = 64'd35;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state22))) begin
        wy_sum_address1 = 64'd33;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state21))) begin
        wy_sum_address1 = 64'd31;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state20))) begin
        wy_sum_address1 = 64'd29;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state19))) begin
        wy_sum_address1 = 64'd27;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state18))) begin
        wy_sum_address1 = 64'd25;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state17))) begin
        wy_sum_address1 = 64'd23;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state16))) begin
        wy_sum_address1 = 64'd21;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state15))) begin
        wy_sum_address1 = 64'd19;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state14))) begin
        wy_sum_address1 = 64'd17;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13))) begin
        wy_sum_address1 = 64'd15;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state12))) begin
        wy_sum_address1 = 64'd13;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state11))) begin
        wy_sum_address1 = 64'd11;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state10))) begin
        wy_sum_address1 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state9))) begin
        wy_sum_address1 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state8))) begin
        wy_sum_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state7))) begin
        wy_sum_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        wy_sum_address1 = 64'd0;
    end else begin
        wy_sum_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state6))) begin
        wy_sum_ce0 = 1'b1;
    end else begin
        wy_sum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state6))) begin
        wy_sum_ce1 = 1'b1;
    end else begin
        wy_sum_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        wy_sum_d0 = reg_1868;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        wy_sum_d0 = reg_1850;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state65))) begin
        wy_sum_d0 = reg_1826;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        wy_sum_d0 = add_23_reg_3641;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        wy_sum_d0 = add_21_reg_3611;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        wy_sum_d0 = add_19_reg_3581;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        wy_sum_d0 = add_17_reg_3551;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        wy_sum_d0 = add_15_reg_3521;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        wy_sum_d0 = add_13_reg_3491;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state48))) begin
        wy_sum_d0 = reg_1904;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state47))) begin
        wy_sum_d0 = reg_1894;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state59))) begin
        wy_sum_d0 = reg_1884;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state45))) begin
        wy_sum_d0 = reg_1874;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state44))) begin
        wy_sum_d0 = reg_1862;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state43))) begin
        wy_sum_d0 = reg_1838;
    end else if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state88))) begin
        wy_sum_d0 = reg_1811;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        wy_sum_d0 = 32'd0;
    end else begin
        wy_sum_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        wy_sum_d1 = reg_1862;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state65))) begin
        wy_sum_d1 = reg_1838;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67))) begin
        wy_sum_d1 = reg_1811;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        wy_sum_d1 = add_24_reg_3656;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        wy_sum_d1 = add_22_reg_3626;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        wy_sum_d1 = add_20_reg_3596;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        wy_sum_d1 = add_18_reg_3566;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        wy_sum_d1 = add_16_reg_3536;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        wy_sum_d1 = add_14_reg_3506;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        wy_sum_d1 = add_12_reg_3476;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state47))) begin
        wy_sum_d1 = reg_1899;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state59))) begin
        wy_sum_d1 = reg_1889;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state45))) begin
        wy_sum_d1 = reg_1879;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state44))) begin
        wy_sum_d1 = reg_1868;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state43))) begin
        wy_sum_d1 = reg_1850;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state55))) begin
        wy_sum_d1 = reg_1826;
    end else begin
        wy_sum_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state88) | ((1'b1 == ap_CS_fsm_state4) & (exitcond188_fu_1932_p2 == 1'd0)))) begin
        wy_sum_we0 = 1'b1;
    end else begin
        wy_sum_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43))) begin
        wy_sum_we1 = 1'b1;
    end else begin
        wy_sum_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x_EN_A = 1'b1;
    end else begin
        x_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        y_Addr_A_orig = y_addr_reg_3884;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        y_Addr_A_orig = 64'd0;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state100))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        y_WEN_A = 4'd15;
    end else begin
        y_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond199_fu_1915_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond188_fu_1932_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln31_fu_1949_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & (icmp_ln38_fu_2711_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((~((icmp_ln44_reg_3894 == 1'd1) & (1'b0 == ap_block_pp4_stage5_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else if (((icmp_ln44_reg_3894 == 1'd1) & (1'b0 == ap_block_pp4_stage5_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((1'b0 == ap_block_pp4_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_pp4_stage9 : begin
            if ((1'b0 == ap_block_pp4_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_1943_p2 = (i_reg_1597 + 8'd1);

assign add_ln34_10_fu_2155_p2 = (add_ln34_reg_3221 + 14'd17);

assign add_ln34_11_fu_2165_p2 = (add_ln34_reg_3221 + 14'd18);

assign add_ln34_12_fu_2175_p2 = (add_ln34_reg_3221 + 14'd19);

assign add_ln34_13_fu_2185_p2 = (add_ln34_reg_3221 + 14'd20);

assign add_ln34_14_fu_2195_p2 = (add_ln34_reg_3221 + 14'd21);

assign add_ln34_15_fu_2205_p2 = (add_ln34_reg_3221 + 14'd22);

assign add_ln34_16_fu_2215_p2 = (add_ln34_reg_3221 + 14'd23);

assign add_ln34_17_fu_2225_p2 = (add_ln34_reg_3221 + 14'd24);

assign add_ln34_18_fu_2235_p2 = (add_ln34_reg_3221 + 14'd25);

assign add_ln34_19_fu_2245_p2 = (add_ln34_reg_3221 + 14'd26);

assign add_ln34_1_fu_2065_p2 = (add_ln34_reg_3221 + 14'd8);

assign add_ln34_20_fu_2255_p2 = (add_ln34_reg_3221 + 14'd27);

assign add_ln34_21_fu_2265_p2 = (add_ln34_reg_3221 + 14'd28);

assign add_ln34_22_fu_2275_p2 = (add_ln34_reg_3221 + 14'd29);

assign add_ln34_23_fu_2285_p2 = (add_ln34_reg_3221 + 14'd30);

assign add_ln34_24_fu_2295_p2 = (add_ln34_reg_3221 + 14'd31);

assign add_ln34_25_fu_2305_p2 = (add_ln34_reg_3221 + 14'd32);

assign add_ln34_26_fu_2315_p2 = (add_ln34_reg_3221 + 14'd33);

assign add_ln34_27_fu_2325_p2 = (add_ln34_reg_3221 + 14'd34);

assign add_ln34_28_fu_2335_p2 = (add_ln34_reg_3221 + 14'd35);

assign add_ln34_29_fu_2345_p2 = (add_ln34_reg_3221 + 14'd36);

assign add_ln34_2_fu_2075_p2 = (add_ln34_reg_3221 + 14'd9);

assign add_ln34_30_fu_2355_p2 = (add_ln34_reg_3221 + 14'd37);

assign add_ln34_31_fu_2365_p2 = (add_ln34_reg_3221 + 14'd38);

assign add_ln34_32_fu_2375_p2 = (add_ln34_reg_3221 + 14'd39);

assign add_ln34_33_fu_2385_p2 = (add_ln34_reg_3221 + 14'd40);

assign add_ln34_34_fu_2395_p2 = (add_ln34_reg_3221 + 14'd41);

assign add_ln34_35_fu_2405_p2 = (add_ln34_reg_3221 + 14'd42);

assign add_ln34_36_fu_2415_p2 = (add_ln34_reg_3221 + 14'd43);

assign add_ln34_37_fu_2425_p2 = (add_ln34_reg_3221 + 14'd44);

assign add_ln34_38_fu_2435_p2 = (add_ln34_reg_3221 + 14'd45);

assign add_ln34_39_fu_2445_p2 = (add_ln34_reg_3221 + 14'd46);

assign add_ln34_3_fu_2085_p2 = (add_ln34_reg_3221 + 14'd10);

assign add_ln34_40_fu_2455_p2 = (add_ln34_reg_3221 + 14'd47);

assign add_ln34_41_fu_2465_p2 = (add_ln34_reg_3221 + 14'd48);

assign add_ln34_42_fu_2475_p2 = (add_ln34_reg_3221 + 14'd49);

assign add_ln34_43_fu_2485_p2 = (add_ln34_reg_3221 + 14'd50);

assign add_ln34_44_fu_2495_p2 = (add_ln34_reg_3221 + 14'd51);

assign add_ln34_45_fu_2505_p2 = (add_ln34_reg_3221 + 14'd52);

assign add_ln34_46_fu_2515_p2 = (add_ln34_reg_3221 + 14'd53);

assign add_ln34_47_fu_2525_p2 = (add_ln34_reg_3221 + 14'd54);

assign add_ln34_48_fu_2535_p2 = (add_ln34_reg_3221 + 14'd55);

assign add_ln34_49_fu_2545_p2 = (add_ln34_reg_3221 + 14'd56);

assign add_ln34_4_fu_2095_p2 = (add_ln34_reg_3221 + 14'd11);

assign add_ln34_50_fu_2555_p2 = (add_ln34_reg_3221 + 14'd57);

assign add_ln34_51_fu_2565_p2 = (add_ln34_reg_3221 + 14'd58);

assign add_ln34_52_fu_2575_p2 = (add_ln34_reg_3221 + 14'd59);

assign add_ln34_53_fu_2585_p2 = (add_ln34_reg_3221 + 14'd60);

assign add_ln34_54_fu_2595_p2 = (add_ln34_reg_3221 + 14'd61);

assign add_ln34_55_fu_2605_p2 = (add_ln34_reg_3221 + 14'd62);

assign add_ln34_56_fu_2615_p2 = (add_ln34_reg_3221 + 14'd63);

assign add_ln34_57_fu_2625_p2 = (add_ln34_reg_3221 + 14'd64);

assign add_ln34_58_fu_2635_p2 = (add_ln34_reg_3221 + 14'd65);

assign add_ln34_59_fu_2645_p2 = (add_ln34_reg_3221 + 14'd66);

assign add_ln34_5_fu_2105_p2 = (add_ln34_reg_3221 + 14'd12);

assign add_ln34_60_fu_2655_p2 = (add_ln34_reg_3221 + 14'd67);

assign add_ln34_61_fu_2665_p2 = (add_ln34_reg_3221 + 14'd68);

assign add_ln34_62_fu_2675_p2 = (add_ln34_reg_3221 + 14'd69);

assign add_ln34_63_fu_2685_p2 = (add_ln34_reg_3221 + 14'd70);

assign add_ln34_64_fu_2695_p2 = (add_ln34_reg_3221 + 14'd71);

assign add_ln34_6_fu_2115_p2 = (add_ln34_reg_3221 + 14'd13);

assign add_ln34_7_fu_2125_p2 = (add_ln34_reg_3221 + 14'd14);

assign add_ln34_8_fu_2135_p2 = (add_ln34_reg_3221 + 14'd15);

assign add_ln34_9_fu_2145_p2 = (add_ln34_reg_3221 + 14'd16);

assign add_ln34_fu_1980_p2 = (tmp_3_fu_1960_p3 + zext_ln34_fu_1976_p1);

assign add_ln38_fu_2705_p2 = (o_reg_1608 + 7'd1);

assign add_ln44_fu_2789_p2 = (i_1_reg_1619 + 7'd1);

assign and_ln9_fu_2759_p2 = (or_ln9_fu_2753_p2 & grp_fu_1657_p2);

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state102_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp4_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp4_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp4_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp4_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp4_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp4_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b1_address0 = zext_ln38_fu_2717_p1;

assign bitcast_ln13_fu_2795_p1 = reg_1811;

assign bitcast_ln46_fu_2773_p1 = y_Dout_A;

assign bitcast_ln9_fu_2723_p1 = reg_1811;

assign empty_12_fu_1909_p2 = (empty_reg_1575 + 7'd1);

assign empty_15_fu_1926_p2 = (empty_14_reg_1586 + 7'd1);

assign empty_18_fu_2011_p1 = x_load_reg_3311;

assign exitcond188_fu_1932_p2 = ((empty_14_reg_1586 == 7'd72) ? 1'b1 : 1'b0);

assign exitcond199_fu_1915_p2 = ((empty_reg_1575 == 7'd72) ? 1'b1 : 1'b0);

assign grp_fu_1662_p1 = xor_ln13_reg_3923;

assign icmp_ln31_fu_1949_p2 = ((i_reg_1597 == 8'd178) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_2711_p2 = ((o_reg_1608 == 7'd72) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_2777_p2 = ((ap_phi_mux_i_1_phi_fu_1623_p4 == 7'd72) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_2747_p2 = ((trunc_ln9_fu_2737_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_2741_p2 = ((tmp_1_fu_2727_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln34_1_fu_2001_p2 = (14'd2 | add_ln34_reg_3221);

assign or_ln34_2_fu_2015_p2 = (14'd3 | add_ln34_reg_3221);

assign or_ln34_3_fu_2025_p2 = (14'd4 | add_ln34_reg_3221);

assign or_ln34_4_fu_2035_p2 = (14'd5 | add_ln34_reg_3221);

assign or_ln34_5_fu_2045_p2 = (14'd6 | add_ln34_reg_3221);

assign or_ln34_6_fu_2055_p2 = (14'd7 | add_ln34_reg_3221);

assign or_ln34_fu_1991_p2 = (14'd1 | add_ln34_reg_3221);

assign or_ln9_fu_2753_p2 = (icmp_ln9_fu_2741_p2 | icmp_ln9_1_fu_2747_p2);

assign p_cast1_fu_1938_p1 = empty_14_reg_1586;

assign p_cast_fu_1921_p1 = empty_reg_1575;

assign select_ln9_fu_2765_p3 = ((and_ln9_fu_2759_p2[0:0] == 1'b1) ? 32'd0 : reg_1811);

assign tmp_1_fu_2727_p4 = {{bitcast_ln9_fu_2723_p1[30:23]}};

assign tmp_3_fu_1960_p3 = {{i_reg_1597}, {6'd0}};

assign tmp_4_fu_1968_p3 = {{i_reg_1597}, {3'd0}};

assign trunc_ln9_fu_2737_p1 = bitcast_ln9_fu_2723_p1[22:0];

assign w2_0_address0 = zext_ln44_fu_2783_p1;

assign x_Addr_A = x_Addr_A_orig << 32'd2;

assign x_Addr_A_orig = zext_ln31_fu_1955_p1;

assign x_Clk_A = ap_clk;

assign x_Din_A = 32'd0;

assign x_Rst_A = ap_rst_n_inv;

assign x_WEN_A = 4'd0;

assign xor_ln13_fu_2799_p2 = (bitcast_ln13_fu_2795_p1 ^ 32'd2147483648);

assign y_Addr_A = y_Addr_A_orig << 32'd2;

assign y_Clk_A = ap_clk;

assign y_Din_A = div_i_reg_3938;

assign y_Rst_A = ap_rst_n_inv;

assign y_addr_reg_3884 = 64'd0;

assign zext_ln31_fu_1955_p1 = i_reg_1597;

assign zext_ln34_10_fu_2080_p1 = add_ln34_2_fu_2075_p2;

assign zext_ln34_11_fu_2090_p1 = add_ln34_3_fu_2085_p2;

assign zext_ln34_12_fu_2100_p1 = add_ln34_4_fu_2095_p2;

assign zext_ln34_13_fu_2110_p1 = add_ln34_5_fu_2105_p2;

assign zext_ln34_14_fu_2120_p1 = add_ln34_6_fu_2115_p2;

assign zext_ln34_15_fu_2130_p1 = add_ln34_7_fu_2125_p2;

assign zext_ln34_16_fu_2140_p1 = add_ln34_8_fu_2135_p2;

assign zext_ln34_17_fu_2150_p1 = add_ln34_9_fu_2145_p2;

assign zext_ln34_18_fu_2160_p1 = add_ln34_10_fu_2155_p2;

assign zext_ln34_19_fu_2170_p1 = add_ln34_11_fu_2165_p2;

assign zext_ln34_1_fu_1986_p1 = add_ln34_fu_1980_p2;

assign zext_ln34_20_fu_2180_p1 = add_ln34_12_fu_2175_p2;

assign zext_ln34_21_fu_2190_p1 = add_ln34_13_fu_2185_p2;

assign zext_ln34_22_fu_2200_p1 = add_ln34_14_fu_2195_p2;

assign zext_ln34_23_fu_2210_p1 = add_ln34_15_fu_2205_p2;

assign zext_ln34_24_fu_2220_p1 = add_ln34_16_fu_2215_p2;

assign zext_ln34_25_fu_2230_p1 = add_ln34_17_fu_2225_p2;

assign zext_ln34_26_fu_2240_p1 = add_ln34_18_fu_2235_p2;

assign zext_ln34_27_fu_2250_p1 = add_ln34_19_fu_2245_p2;

assign zext_ln34_28_fu_2260_p1 = add_ln34_20_fu_2255_p2;

assign zext_ln34_29_fu_2270_p1 = add_ln34_21_fu_2265_p2;

assign zext_ln34_2_fu_1996_p1 = or_ln34_fu_1991_p2;

assign zext_ln34_30_fu_2280_p1 = add_ln34_22_fu_2275_p2;

assign zext_ln34_31_fu_2290_p1 = add_ln34_23_fu_2285_p2;

assign zext_ln34_32_fu_2300_p1 = add_ln34_24_fu_2295_p2;

assign zext_ln34_33_fu_2310_p1 = add_ln34_25_fu_2305_p2;

assign zext_ln34_34_fu_2320_p1 = add_ln34_26_fu_2315_p2;

assign zext_ln34_35_fu_2330_p1 = add_ln34_27_fu_2325_p2;

assign zext_ln34_36_fu_2340_p1 = add_ln34_28_fu_2335_p2;

assign zext_ln34_37_fu_2350_p1 = add_ln34_29_fu_2345_p2;

assign zext_ln34_38_fu_2360_p1 = add_ln34_30_fu_2355_p2;

assign zext_ln34_39_fu_2370_p1 = add_ln34_31_fu_2365_p2;

assign zext_ln34_3_fu_2006_p1 = or_ln34_1_fu_2001_p2;

assign zext_ln34_40_fu_2380_p1 = add_ln34_32_fu_2375_p2;

assign zext_ln34_41_fu_2390_p1 = add_ln34_33_fu_2385_p2;

assign zext_ln34_42_fu_2400_p1 = add_ln34_34_fu_2395_p2;

assign zext_ln34_43_fu_2410_p1 = add_ln34_35_fu_2405_p2;

assign zext_ln34_44_fu_2420_p1 = add_ln34_36_fu_2415_p2;

assign zext_ln34_45_fu_2430_p1 = add_ln34_37_fu_2425_p2;

assign zext_ln34_46_fu_2440_p1 = add_ln34_38_fu_2435_p2;

assign zext_ln34_47_fu_2450_p1 = add_ln34_39_fu_2445_p2;

assign zext_ln34_48_fu_2460_p1 = add_ln34_40_fu_2455_p2;

assign zext_ln34_49_fu_2470_p1 = add_ln34_41_fu_2465_p2;

assign zext_ln34_4_fu_2020_p1 = or_ln34_2_fu_2015_p2;

assign zext_ln34_50_fu_2480_p1 = add_ln34_42_fu_2475_p2;

assign zext_ln34_51_fu_2490_p1 = add_ln34_43_fu_2485_p2;

assign zext_ln34_52_fu_2500_p1 = add_ln34_44_fu_2495_p2;

assign zext_ln34_53_fu_2510_p1 = add_ln34_45_fu_2505_p2;

assign zext_ln34_54_fu_2520_p1 = add_ln34_46_fu_2515_p2;

assign zext_ln34_55_fu_2530_p1 = add_ln34_47_fu_2525_p2;

assign zext_ln34_56_fu_2540_p1 = add_ln34_48_fu_2535_p2;

assign zext_ln34_57_fu_2550_p1 = add_ln34_49_fu_2545_p2;

assign zext_ln34_58_fu_2560_p1 = add_ln34_50_fu_2555_p2;

assign zext_ln34_59_fu_2570_p1 = add_ln34_51_fu_2565_p2;

assign zext_ln34_5_fu_2030_p1 = or_ln34_3_fu_2025_p2;

assign zext_ln34_60_fu_2580_p1 = add_ln34_52_fu_2575_p2;

assign zext_ln34_61_fu_2590_p1 = add_ln34_53_fu_2585_p2;

assign zext_ln34_62_fu_2600_p1 = add_ln34_54_fu_2595_p2;

assign zext_ln34_63_fu_2610_p1 = add_ln34_55_fu_2605_p2;

assign zext_ln34_64_fu_2620_p1 = add_ln34_56_fu_2615_p2;

assign zext_ln34_65_fu_2630_p1 = add_ln34_57_fu_2625_p2;

assign zext_ln34_66_fu_2640_p1 = add_ln34_58_fu_2635_p2;

assign zext_ln34_67_fu_2650_p1 = add_ln34_59_fu_2645_p2;

assign zext_ln34_68_fu_2660_p1 = add_ln34_60_fu_2655_p2;

assign zext_ln34_69_fu_2670_p1 = add_ln34_61_fu_2665_p2;

assign zext_ln34_6_fu_2040_p1 = or_ln34_4_fu_2035_p2;

assign zext_ln34_70_fu_2680_p1 = add_ln34_62_fu_2675_p2;

assign zext_ln34_71_fu_2690_p1 = add_ln34_63_fu_2685_p2;

assign zext_ln34_72_fu_2700_p1 = add_ln34_64_fu_2695_p2;

assign zext_ln34_7_fu_2050_p1 = or_ln34_5_fu_2045_p2;

assign zext_ln34_8_fu_2060_p1 = or_ln34_6_fu_2055_p2;

assign zext_ln34_9_fu_2070_p1 = add_ln34_1_fu_2065_p2;

assign zext_ln34_fu_1976_p1 = tmp_4_fu_1968_p3;

assign zext_ln38_fu_2717_p1 = o_reg_1608;

assign zext_ln44_fu_2783_p1 = ap_phi_mux_i_1_phi_fu_1623_p4;

always @ (posedge ap_clk) begin
    add_ln34_reg_3221[2:0] <= 3'b000;
    zext_ln38_reg_3859[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //feedforward
